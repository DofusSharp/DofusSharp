@using BestCrush.Domain.Models
@using BestCrush.Domain.Services
@using BestCrush.Models
@inject ItemsService ItemsService

<div class="d-flex align-items-center justify-content-center gap-4">
    @if (Equipment is not null)
    {
        <div class="d-flex gap-4">
            <div>
                <ItemIcon Item="Equipment" Background="IconBackground.Slot"></ItemIcon>
            </div>
            <div>
                <div class="d-flex gap-2 justify-content-between">
                    <div>
                        <div class="fw-bold">@Equipment.Name</div>
                        <div>@Equipment.Type.ToDisplayName() Lv.@Equipment.Level</div>
                    </div>
                    @if (Cost.HasValue)
                    {
                        <div class="d-flex flex-column align-items-center">
                            <Kamas Amount="Cost" Size="IconSize.Medium"/>
                            @if (CostDate.HasValue)
                            {
                                <span class="small text-secondary">@CostDate.Value.ToString("G")</span>
                            }
                        </div>
                    }
                </div>
                @if (Equipment.Recipe.Any())
                {
                    <div class="d-flex flex-wrap gap-2">
                        @foreach (RecipeEntry entry in Equipment.Recipe)
                        {
                            <div>
                                <ItemIconWithCount Item="entry.Resource" Count="entry.Count" Size="IconSize.Medium"></ItemIconWithCount>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {

    [Parameter]
    public Equipment? Equipment { get; init; }

    [Parameter]
    public double? Cost { get; init; }

    [Parameter]
    public DateTimeOffset? CostDate { get; init; }

}