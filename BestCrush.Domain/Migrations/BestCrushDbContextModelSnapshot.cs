// <auto-generated />
using System;
using BestCrush.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BestCrush.Domain.Migrations
{
    [DbContext(typeof(BestCrushDbContext))]
    partial class BestCrushDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("BestCrush.Domain.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long?>("DofusDbIconId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DofusDbId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("DofusDbId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.ItemCharacteristicLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Characteristic")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("TEXT");

                    b.Property<int>("From")
                        .HasColumnType("INTEGER");

                    b.Property<int>("To")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("ItemCharacteristicLine");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.RecipeEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ResourceId");

                    b.ToTable("RecipeEntry");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long?>("DofusDbIconId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DofusDbId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("DofusDbId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.Rune", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Characteristic")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DofusDbIconId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DofusDbId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("DofusDbId");

                    b.ToTable("Runes");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.Upgrade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Kind")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NewVersion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("OldVersion")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpgradeDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Upgrades");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.ItemCharacteristicLine", b =>
                {
                    b.HasOne("BestCrush.Domain.Models.Equipment", "Equipment")
                        .WithMany("Characteristics")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.RecipeEntry", b =>
                {
                    b.HasOne("BestCrush.Domain.Models.Equipment", "Equipment")
                        .WithMany("Recipe")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BestCrush.Domain.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("BestCrush.Domain.Models.Equipment", b =>
                {
                    b.Navigation("Characteristics");

                    b.Navigation("Recipe");
                });
#pragma warning restore 612, 618
        }
    }
}
