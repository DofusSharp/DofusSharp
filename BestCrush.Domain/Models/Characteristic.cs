namespace BestCrush.Domain.Models;

public enum Characteristic
{
    DamageFlatAll,
    DamageFlatNeutral,
    DamageFlatEarth,
    DamageFlatFire,
    DamageFlatWater,
    DamageFlatAir,
    DamageFlatCritical,
    DamageFlatPushback,
    DamageFlatTrap,
    DamagePercentTrap,
    DamagePercentSpell,
    DamagePercentWeapon,
    DamagePercentDisance,
    DamagePercentMelee,
    ResistanceFlatNeutral,
    ResistanceFlatEarth,
    ResistanceFlatFire,
    ResistanceFlatWater,
    ResistanceFlatAir,
    ResistanceFlatCritical,
    ResistanceFlatPushback,
    ResistancePercentNeutral,
    ResistancePercentEarth,
    ResistancePercentFire,
    ResistancePercentWater,
    ResistancePercentAir,
    ResistancePercentDistance,
    ResistancePercentMelee,
    Ap,
    Mp,
    Range,
    Summons,
    Critical,
    Power,
    Pods,
    Healing,
    Strength,
    Intelligence,
    Chance,
    Agility,
    Wisdom,
    Vitality,
    Initiative,
    Prospecting,
    Hunting,
    Dodge,
    Lock,
    ApDodge,
    MpDodge,
    ApReduction,
    MpReduction,
    DamageReflection
}

public static class CharacteristicExtensions
{
    public static string ToDisplayName(this Characteristic characteristic) =>
        characteristic switch
        {
            Characteristic.DamageFlatAll => "Damage (fixed)",
            Characteristic.DamageFlatNeutral => "Neutral Damage (fixed)",
            Characteristic.DamageFlatEarth => "Earth Damage (fixed)",
            Characteristic.DamageFlatFire => "Fire Damage (fixed)",
            Characteristic.DamageFlatWater => "Water Damage (fixed)",
            Characteristic.DamageFlatAir => "Air Damage (fixed)",
            Characteristic.DamageFlatCritical => "Critical Damage (fixed)",
            Characteristic.DamageFlatPushback => "Pushback Damage (fixed)",
            Characteristic.DamageFlatTrap => "Trap Damage (fixed)",
            Characteristic.DamagePercentTrap => "Trap Damage (%)",
            Characteristic.DamagePercentSpell => "Spell Damage (%)",
            Characteristic.DamagePercentWeapon => "Weapon Damage (%)",
            Characteristic.DamagePercentDisance => "Distance Damage (%)",
            Characteristic.DamagePercentMelee => "Melee Damage (%)",
            Characteristic.ResistanceFlatNeutral => "Neutral Resistance (fixed)",
            Characteristic.ResistanceFlatEarth => "Earth Resistance (fixed)",
            Characteristic.ResistanceFlatFire => "Fire Resistance (fixed)",
            Characteristic.ResistanceFlatWater => "Water Resistance (fixed)",
            Characteristic.ResistanceFlatAir => "Air Resistance (fixed)",
            Characteristic.ResistanceFlatCritical => "Critical Resistance (fixed)",
            Characteristic.ResistanceFlatPushback => "Pushback Resistance (fixed)",
            Characteristic.ResistancePercentNeutral => "Neutral Resistance (%)",
            Characteristic.ResistancePercentEarth => "Earth Resistance (%)",
            Characteristic.ResistancePercentFire => "Fire Resistance (%)",
            Characteristic.ResistancePercentWater => "Water Resistance (%)",
            Characteristic.ResistancePercentAir => "Air Resistance (%)",
            Characteristic.ResistancePercentDistance => "Distance Resistance (%)",
            Characteristic.ResistancePercentMelee => "Melee Resistance (%)",
            Characteristic.Ap => "AP",
            Characteristic.Mp => "MP",
            Characteristic.Range => "Range",
            Characteristic.Summons => "Summons",
            Characteristic.Critical => "Critical Hits",
            Characteristic.Power => "Power",
            Characteristic.Pods => "Pods",
            Characteristic.Healing => "Heals",
            Characteristic.Strength => "Strength",
            Characteristic.Intelligence => "Intelligence",
            Characteristic.Chance => "Chance",
            Characteristic.Agility => "Agility",
            Characteristic.Wisdom => "Wisdom",
            Characteristic.Vitality => "Vitality",
            Characteristic.Initiative => "Initiative",
            Characteristic.Prospecting => "Prospecting",
            Characteristic.Hunting => "Hunting",
            Characteristic.Dodge => "Dodge",
            Characteristic.Lock => "Lock",
            Characteristic.ApDodge => "AP Dodge",
            Characteristic.MpDodge => "MP Dodge",
            Characteristic.ApReduction => "AP Reduction",
            Characteristic.MpReduction => "MP Reduction",
            Characteristic.DamageReflection => "Reflect",
            _ => throw new ArgumentOutOfRangeException(nameof(characteristic), characteristic, null)
        };

    public static string ToDofusDbKeyword(this Characteristic characteristic) =>
        characteristic switch
        {
            Characteristic.DamageFlatAll => "allDamageBonus",
            Characteristic.DamageFlatNeutral => "neutralDamageBonus",
            Characteristic.DamageFlatEarth => "earthDamageBonus",
            Characteristic.DamageFlatFire => "fireDamageBonus",
            Characteristic.DamageFlatWater => "waterDamageBonus",
            Characteristic.DamageFlatAir => "airDamageBonus",
            Characteristic.DamageFlatCritical => "criticalDamageBonus",
            Characteristic.DamageFlatPushback => "pushDamageBonus",
            Characteristic.DamageFlatTrap => "trapDamageBonus",
            Characteristic.DamagePercentTrap => "trapDamageBonusPercent",
            Characteristic.DamagePercentSpell => "dealtDamageMultiplierSpells",
            Characteristic.DamagePercentWeapon => "dealtDamageMultiplierWeapon",
            Characteristic.DamagePercentDisance => "dealtDamageMultiplierDistance",
            Characteristic.DamagePercentMelee => "dealtDamageMultiplierMelee",
            Characteristic.ResistanceFlatNeutral => "neutralElementResist",
            Characteristic.ResistanceFlatEarth => "earthElementResist",
            Characteristic.ResistanceFlatFire => "fireElementResist",
            Characteristic.ResistanceFlatWater => "waterElementResist",
            Characteristic.ResistanceFlatAir => "airElementResist",
            Characteristic.ResistanceFlatCritical => "criticalDamageReduction",
            Characteristic.ResistanceFlatPushback => "pushDamageReduction",
            Characteristic.ResistancePercentNeutral => "neutralElementResistPercent",
            Characteristic.ResistancePercentEarth => "earthElementResistPercent",
            Characteristic.ResistancePercentFire => "fireElementResistPercent",
            Characteristic.ResistancePercentWater => "waterElementResistPercent",
            Characteristic.ResistancePercentAir => "airElementResistPercent",
            Characteristic.ResistancePercentDistance => "receivedDamageMultiplierDistance",
            Characteristic.ResistancePercentMelee => "receivedDamageMultiplierMelee",
            Characteristic.Ap => "actionPoints",
            Characteristic.Mp => "movementPoints",
            Characteristic.Range => "range",
            Characteristic.Summons => "maxSummonedCreaturesBoost",
            Characteristic.Critical => "criticalHit",
            Characteristic.Power => "damagePercent",
            Characteristic.Pods => "weight",
            Characteristic.Healing => "healBonus",
            Characteristic.Strength => "strength",
            Characteristic.Intelligence => "intelligence",
            Characteristic.Chance => "chance",
            Characteristic.Agility => "agility",
            Characteristic.Wisdom => "wisdom",
            Characteristic.Vitality => "vitality",
            Characteristic.Initiative => "initiative",
            Characteristic.Prospecting => "magicFind",
            Characteristic.Hunting => "hunter",
            Characteristic.Dodge => "tackleEvade",
            Characteristic.Lock => "tackleBlock",
            Characteristic.ApDodge => "DodgeApLostProbability",
            Characteristic.MpDodge => "DodgeMpLostProbability",
            Characteristic.ApReduction => "apReduction",
            Characteristic.MpReduction => "mpReduction",
            Characteristic.DamageReflection => "reflectDamage",
            _ => throw new ArgumentOutOfRangeException(nameof(characteristic), characteristic, null)
        };

    public static Characteristic? CharacteristicFromDofusDbKeyword(string keyword) =>
        keyword.ToLowerInvariant() switch
        {
            "alldamagebonus" => Characteristic.DamageFlatAll,
            "neutraldamagebonus" => Characteristic.DamageFlatNeutral,
            "earthdamagebonus" => Characteristic.DamageFlatEarth,
            "firedamagebonus" => Characteristic.DamageFlatFire,
            "waterdamagebonus" => Characteristic.DamageFlatWater,
            "airdamagebonus" => Characteristic.DamageFlatAir,
            "criticaldamagebonus" => Characteristic.DamageFlatCritical,
            "pushdamagebonus" => Characteristic.DamageFlatPushback,
            "trapdamagebonus" => Characteristic.DamageFlatTrap,
            "trapdamagebonuspercent" => Characteristic.DamagePercentTrap,
            "dealtdamagemultiplierspells" => Characteristic.DamagePercentSpell,
            "dealtdamagemultiplierweapon" => Characteristic.DamagePercentWeapon,
            "dealtdamagemultiplierdistance" => Characteristic.DamagePercentDisance,
            "dealtdamagemultipliermelee" => Characteristic.DamagePercentMelee,
            "neutralelementresist" => Characteristic.ResistanceFlatNeutral,
            "earthelementresist" => Characteristic.ResistanceFlatEarth,
            "fireelementresist" => Characteristic.ResistanceFlatFire,
            "waterelementresist" => Characteristic.ResistanceFlatWater,
            "airelementresist" => Characteristic.ResistanceFlatAir,
            "criticaldamagereduction" => Characteristic.ResistanceFlatCritical,
            "pushdamagereduction" => Characteristic.ResistanceFlatPushback,
            "neutralelementresistpercent" => Characteristic.ResistancePercentNeutral,
            "earthelementresistpercent" => Characteristic.ResistancePercentEarth,
            "fireelementresistpercent" => Characteristic.ResistancePercentFire,
            "waterelementresistpercent" => Characteristic.ResistancePercentWater,
            "airelementresistpercent" => Characteristic.ResistancePercentAir,
            "receiveddamagemultiplierdistance" => Characteristic.ResistancePercentDistance,
            "receiveddamagemultipliermelee" => Characteristic.ResistancePercentMelee,
            "actionpoints" => Characteristic.Ap,
            "movementpoints" => Characteristic.Mp,
            "range" => Characteristic.Range,
            "maxsummonedcreaturesboost" => Characteristic.Summons,
            "criticalhit" => Characteristic.Critical,
            "damagepercent" => Characteristic.Power,
            "weight" => Characteristic.Pods,
            "healbonus" => Characteristic.Healing,
            "strength" => Characteristic.Strength,
            "intelligence" => Characteristic.Intelligence,
            "chance" => Characteristic.Chance,
            "agility" => Characteristic.Agility,
            "wisdom" => Characteristic.Wisdom,
            "vitality" => Characteristic.Vitality,
            "initiative" => Characteristic.Initiative,
            "magicfind" => Characteristic.Prospecting,
            "hunter" => Characteristic.Hunting,
            "tackleevade" => Characteristic.Dodge,
            "tackleblock" => Characteristic.Lock,
            "dodgeaplostprobability" => Characteristic.ApDodge,
            "dodgemplostprobability" => Characteristic.MpDodge,
            "apreduction" => Characteristic.ApReduction,
            "mpreduction" => Characteristic.MpReduction,
            "reflectdamage" => Characteristic.DamageReflection,
            _ => null
        };
}
