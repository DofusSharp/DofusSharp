name: Continuous Deployment - Publish Best Crush

on:
  release:
    types: published
  workflow_dispatch:

jobs:
  compute-version:
    name: Compute version
    uses: ./.github/workflows/reusable-compute-version.yml
    with:
      build-name: release

  build-publish:
    name: Build Best Crush
    
    runs-on: windows-latest
    needs: compute-version
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET 10.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 10.0.x

      - name: Install MAUI
        run: dotnet workload install maui

      - name: Test
        run: dotnet test DofusSharp.BestCrush.Filter.slnf --configuration Release

      - name: Publish
        run: dotnet publish BestCrush/BestCrush.csproj --output nsis/BestCrush/app/ --configuration Release --framework net10.0-windows10.0.19041.0 --property Version=${{ needs.compute-version.outputs.version }} --property DebugSymbols=false --property DebugType=None

      - name: Remove PDBs
        run: rm nsis/BestCrush/app/*.pdb

      - name: Upload compiled application to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: best-crush-${{ needs.compute-version.outputs.version-short }}-windows
          path: nsis/BestCrush/app/
          if-no-files-found: 'error'

      - name: Create release archive
        if: ${{ github.event_name == 'release' }}
        run: |
          cd nsis/BestCrush/app
          7z a app.zip .

      - name: Upload archive to release
        if: ${{ github.event_name == 'release' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: nsis/BestCrush/app/app.zip
          asset_name: best-crush-v${{ needs.compute-version.outputs.version-short }}-win.zip
          tag: ${{ github.ref }}

  create-installer:
    name: Create installer
    
    runs-on: windows-latest
    needs:
      - compute-version
      - build-publish
    
    permissions: 
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download compiled application from artifacts
        uses: actions/download-artifact@v4
        with:
          name: best-crush-${{ needs.compute-version.outputs.version-short }}-windows
          path: nsis/BestCrush/app/

      - name: Install NSIS
        uses: MinoruSekine/setup-scoop@v4.0.2
        with:
          buckets: extras
          apps: nsis

      - name: Download .NET 10 Runtime installer
        run: |
          mkdir nsis/BestCrush/redist
          iwr "https://builds.dotnet.microsoft.com/dotnet/WindowsDesktop/10.0.0-rc.1.25451.107/windowsdesktop-runtime-10.0.0-rc.1.25451.107-win-x64.exe" -OutFile "nsis/BestCrush/redist/windowsdesktop-runtime-10.0.0-win-x64.exe"

      - name: Create installer
        run: |
          cd nsis/BestCrush
          makensis /DVersion=${{ needs.compute-version.outputs.version-short }} /INPUTCHARSET UTF8 best-crush.nsi

      - name: Upload installer to release
        if: ${{ github.event_name == 'release' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "nsis/BestCrush/Setup Best Crush v${{ needs.compute-version.outputs.version-short }}.exe"
          asset_name: "Setup Best Crush v${{ needs.compute-version.outputs.version-short }}.exe"
          tag: ${{ github.ref }}

      - name: Upload installer to artifacts
        if: ${{ github.event_name != 'release' }}
        uses: actions/upload-artifact@v4
        with:
          path: "nsis/BestCrush/Setup Best Crush v${{ needs.compute-version.outputs.version-short }}.exe"
          name: "Setup Best Crush v${{ needs.compute-version.outputs.version-short }}.exe"
          if-no-files-found: 'error'