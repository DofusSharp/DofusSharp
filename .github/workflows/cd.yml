name: Continuous Deployment - Publish Libraries

on:
  release:
    types: [published]
  workflow_dispatch:
    dry-run:
      description: Whether to skip the publication of packages to the repositories
      type: boolean

jobs:
  compute-version:
    name: Compute version
    uses: ./.github/workflows/reusable-compute-version.yml
    with:
      build-name: pr

  build-publish:
    runs-on: ubuntu-latest
    needs: compute-version
    
    permissions:
      actions: write
      contents: write
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET 10.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 10.0.x

      - name: Build
        run: dotnet build DofusSharp.Libraries.Filter.slnf --configuration Release --property Version=${{ needs.compute-version.outputs.version }}

      - name: Test
        run: dotnet test DofusSharp.Libraries.Filter.slnf --configuration Release --no-build
        
      - name: Pack
        run: dotnet pack DofusSharp.Libraries.Filter.slnf --output nuget/ --property Version=${{ needs.compute-version.outputs.version }}
      
      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: libraries
          path: nuget/*.nupkg
          if-no-files-found: error

      - name: Configure Github Nuget repository
        if: ${{ !inputs.dry-run }}
        run: dotnet nuget add source --username ismailbennani --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/ismailbennani/index.json"
        
      - name: Publish nugets - Github
        if: ${{ !inputs.dry-run }}
        run: |
          for filename in nuget/*.nupkg; do
              dotnet nuget push "$filename" --source github --api-key ${{ secrets.GITHUB_TOKEN }}
          done

      - name: Publish nugets - Nuget
        if: ${{ !inputs.dry-run }}
        run: |
          for filename in nuget/*.nupkg; do
              dotnet nuget push "$filename" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }}
          done